name: build-windows

on:
  push:
    branches: [ "develop" ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  TRIPLET: x64-windows-static

jobs:
  build:        
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: [ windows-latest ]

    steps:
    - uses: actions/checkout@v3
      with:
        ref: develop
        submodules: recursive

    - name: Build MeshFix
      run: |
        cmake -B build_MeshFix -S ${{github.workspace}}/submodule/MeshFix-V2.1 -DCMAKE_BUILD_TYPE="Release"
        cmake --build build_MeshFix --config "Release"
        cp ${{github.workspace}}/submodule/MeshFix-V2.1/bin64/Release/MeshFix.exe ${{github.workspace}}/plugins/TORIDE/repairMesh/MeshFix.exe
        cp ${{github.workspace}}/submodule/MeshFix-V2.1/bin64/Release/MeshFix.exe ${{github.workspace}}/plugins/TORIDE/repairAllMeshes/MeshFix.exe
        rm ${{github.workspace}}/submodule/MeshFix-V2.1/bin64/Release/MeshFix.exe

    - name: Bootstrap vcpkg
      run: ${{github.workspace}}/submodule/Doppelganger_Util/submodule/vcpkg/bootstrap-vcpkg.bat

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -S ${{github.workspace}} -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/submodule/Doppelganger_Util/submodule/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=${{env.TRIPLET}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

#    - name: Test
#      working-directory: ${{github.workspace}}/build
#      # Execute tests defined by the CMake configuration.  
#      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#      run: ctest -C ${{env.BUILD_TYPE}}
      
